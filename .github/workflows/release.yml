name: Release Build

on: workflow_dispatch
permissions: write-all

env:
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: short

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: macos-latest
            target: x86_64-apple-darwin

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Add Rust Target
        run: rustup target add ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri
          cache-all-crates: true

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Pnpm install and check
        run: |
          pnpm i
          pnpm check ${{ matrix.target }}

      - name: Tauri Build
        uses: tauri-apps/tauri-action@v0
        env:
          NODE_OPTIONS: '--max_old_space_size=4096'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: v__VERSION__
          releaseName: 'Clash Verge Rev v__VERSION__'
          releaseBody: 'More new features are now supported.'
          tauriScript: pnpm
          args: --target ${{ matrix.target }}

  # release-update:
  #   runs-on: ubuntu-latest
  #   needs: [release]
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Install Node
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '22'

  #     - name: Install pnpm
  #       uses: pnpm/action-setup@v4
  #       with:
  #         run_install: false

  #     - name: Pnpm install
  #       run: pnpm i

  #     - name: Release updater file
  #       run: pnpm updater
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
